package org.jkiss.dbeaver.ext.postgresql.sql;

import static org.junit.Assert.assertEquals;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.jkiss.dbeaver.model.sql.parser.tokens.SQLTokenType;
import org.jkiss.dbeaver.model.text.parser.*;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;




@RunWith(MockitoJUnitRunner.class)
public class PostgreEscapeStringRuleTest {

	@Mock
	TPCharacterScanner scannerMock;
	 @Test
	    public void testEvaluate() {
		 PostgreEscapeStringRule obj = new PostgreEscapeStringRule();

	        boolean resume = false;

	        // Mock the TPCharacterScanner
	        try {
	            when(scannerMock.getColumn()).thenReturn(0);
	            when(scannerMock.read()).thenReturn(TPCharacterScanner.EOF);

	            // Call the method under test
	            TPToken result = obj.evaluate(scannerMock, resume);

	            // Assert that the result matches the expected token
	            assertEquals(SQLTokenType.T_STRING, result);

	            // Verify that the expected methods were called on the scanner
	            verify(scannerMock).getColumn();
	            verify(scannerMock, times(4)).read();
	            verify(scannerMock, times(2)).unread();
	        } catch (Exception e) {
	           System.out.println(e);
	        }
	    }

}

